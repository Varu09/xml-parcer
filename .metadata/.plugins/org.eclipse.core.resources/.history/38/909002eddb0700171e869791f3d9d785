package myPackage;

import java.io.File;
import java.util.List;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class WriteXmlFile {

   private DocumentBuilderFactory docFactory;
   private DocumentBuilder docBuilder;
   private String fileName;
   private Document doc;
   private Element rootElement;

    public DocumentBuilderFactory getDocFactory() {
	return docFactory;
}



public void setDocFactory(DocumentBuilderFactory docFactory) {
	this.docFactory = docFactory;
}



public DocumentBuilder getDocBuilder() {
	return docBuilder;
}



public void setDocBuilder(DocumentBuilder docBuilder) {
	this.docBuilder = docBuilder;
}



public String getFileName() {
	return fileName;
}



public void setFileName(String fileName) {
	this.fileName = fileName;
}



public Document getDoc() {
	return doc;
}



public void setDoc(Document doc) {
	this.doc = doc;
}



public Element getRootElement() {
	return rootElement;
}



public void setRootElement(Element rootElement) {
	this.rootElement = rootElement;
}



	public WriteXmlFile(String fileName) {
        try {
        docFactory = DocumentBuilderFactory.newInstance();
        docBuilder = docFactory.newDocumentBuilder();
            // root elements
            doc = docBuilder.newDocument();
            rootElement = doc.createElement("products");
            doc.appendChild(rootElement);
            this.fileName = fileName;

        } catch (ParserConfigurationException pce) {
            pce.printStackTrace();
        }
    }
	
	

    public void createFile (List<Product> products) {


            try {           	
            	
            for(Product product : products){
            	Node productElement =  product.getProductElement().cloneNode(true);
            	doc.adoptNode(productElement);
              	Node supplier = ParseUtils.getNode("supplier", productElement.getChildNodes());
            	Element orderId = doc.createElement("orderid");
            	orderId.appendChild(doc.createTextNode(product.getOrderId()));
            	productElement.replaceChild(orderId, supplier);
            	rootElement.appendChild(productElement);
            }


            // write the content into xml file
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            DOMSource source = new DOMSource(doc);
            StreamResult result = new StreamResult(new File("outputs/" + fileName));
            
            transformer.transform(source, result);

            System.out.println("File saved!");

            } catch (TransformerException e) {
                e.printStackTrace();
            }
    }
}
